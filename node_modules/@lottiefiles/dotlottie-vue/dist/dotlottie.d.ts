import * as vue from 'vue';
import { VNode } from 'vue';
import * as _lottiefiles_dotlottie_web from '@lottiefiles/dotlottie-web';
import { Config, DotLottie } from '@lottiefiles/dotlottie-web';
export { DotLottie } from '@lottiefiles/dotlottie-web';

interface DotLottieVueProps extends Omit<Config, 'canvas'> {
    playOnHover?: boolean;
    themeData?: string;
}
interface DotLottieVueExposed {
    getDotLottieInstance: () => DotLottie | null;
}
declare const DotLottieVue: vue.DefineComponent<{
    playOnHover?: boolean | undefined;
    themeData?: string | undefined;
    animationId?: string | undefined;
    autoplay?: boolean | undefined;
    backgroundColor?: string | undefined;
    data?: _lottiefiles_dotlottie_web.Data | undefined;
    layout?: _lottiefiles_dotlottie_web.Layout | undefined;
    loop?: boolean | undefined;
    marker?: string | undefined;
    mode?: _lottiefiles_dotlottie_web.Mode | undefined;
    renderConfig?: _lottiefiles_dotlottie_web.RenderConfig | undefined;
    segment?: [number, number] | undefined;
    speed?: number | undefined;
    src?: string | undefined;
    themeId?: string | undefined;
    useFrameInterpolation?: boolean | undefined;
}, () => VNode, {}, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.PublicProps, Readonly<{
    playOnHover?: boolean | undefined;
    themeData?: string | undefined;
    animationId?: string | undefined;
    autoplay?: boolean | undefined;
    backgroundColor?: string | undefined;
    data?: _lottiefiles_dotlottie_web.Data | undefined;
    layout?: _lottiefiles_dotlottie_web.Layout | undefined;
    loop?: boolean | undefined;
    marker?: string | undefined;
    mode?: _lottiefiles_dotlottie_web.Mode | undefined;
    renderConfig?: _lottiefiles_dotlottie_web.RenderConfig | undefined;
    segment?: [number, number] | undefined;
    speed?: number | undefined;
    src?: string | undefined;
    themeId?: string | undefined;
    useFrameInterpolation?: boolean | undefined;
}> & Readonly<{}>, {}, {}, {}, {}, string, vue.ComponentProvideOptions, true, {}, any>;
type DotLottieVueInstance = InstanceType<typeof DotLottieVue> & DotLottieVueExposed;
declare const setWasmUrl: (url: string) => void;

export { DotLottieVue, type DotLottieVueInstance, type DotLottieVueProps, setWasmUrl };
